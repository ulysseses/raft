// Code generated by protoc-gen-go. DO NOT EDIT.
// source: raft.proto

package raftpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Entry struct {
	Term                 uint64   `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Index                uint64   `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entry) Reset()         { *m = Entry{} }
func (m *Entry) String() string { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()    {}
func (*Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{0}
}

func (m *Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entry.Unmarshal(m, b)
}
func (m *Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entry.Marshal(b, m, deterministic)
}
func (m *Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entry.Merge(m, src)
}
func (m *Entry) XXX_Size() int {
	return xxx_messageInfo_Entry.Size(m)
}
func (m *Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_Entry proto.InternalMessageInfo

func (m *Entry) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *Entry) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Entry) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type AppendRequest struct {
	PrevIndex            uint64   `protobuf:"varint,1,opt,name=prev_index,json=prevIndex,proto3" json:"prev_index,omitempty"`
	PrevTerm             uint64   `protobuf:"varint,2,opt,name=prev_term,json=prevTerm,proto3" json:"prev_term,omitempty"`
	Entries              []*Entry `protobuf:"bytes,3,rep,name=entries,proto3" json:"entries,omitempty"`
	Committed            uint64   `protobuf:"varint,4,opt,name=committed,proto3" json:"committed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendRequest) Reset()         { *m = AppendRequest{} }
func (m *AppendRequest) String() string { return proto.CompactTextString(m) }
func (*AppendRequest) ProtoMessage()    {}
func (*AppendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{1}
}

func (m *AppendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendRequest.Unmarshal(m, b)
}
func (m *AppendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendRequest.Marshal(b, m, deterministic)
}
func (m *AppendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendRequest.Merge(m, src)
}
func (m *AppendRequest) XXX_Size() int {
	return xxx_messageInfo_AppendRequest.Size(m)
}
func (m *AppendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AppendRequest proto.InternalMessageInfo

func (m *AppendRequest) GetPrevIndex() uint64 {
	if m != nil {
		return m.PrevIndex
	}
	return 0
}

func (m *AppendRequest) GetPrevTerm() uint64 {
	if m != nil {
		return m.PrevTerm
	}
	return 0
}

func (m *AppendRequest) GetEntries() []*Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *AppendRequest) GetCommitted() uint64 {
	if m != nil {
		return m.Committed
	}
	return 0
}

type AppendResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Index                uint64   `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendResponse) Reset()         { *m = AppendResponse{} }
func (m *AppendResponse) String() string { return proto.CompactTextString(m) }
func (*AppendResponse) ProtoMessage()    {}
func (*AppendResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{2}
}

func (m *AppendResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendResponse.Unmarshal(m, b)
}
func (m *AppendResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendResponse.Marshal(b, m, deterministic)
}
func (m *AppendResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendResponse.Merge(m, src)
}
func (m *AppendResponse) XXX_Size() int {
	return xxx_messageInfo_AppendResponse.Size(m)
}
func (m *AppendResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AppendResponse proto.InternalMessageInfo

func (m *AppendResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *AppendResponse) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type VoteRequest struct {
	Index                uint64   `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteRequest) Reset()         { *m = VoteRequest{} }
func (m *VoteRequest) String() string { return proto.CompactTextString(m) }
func (*VoteRequest) ProtoMessage()    {}
func (*VoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{3}
}

func (m *VoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteRequest.Unmarshal(m, b)
}
func (m *VoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteRequest.Marshal(b, m, deterministic)
}
func (m *VoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteRequest.Merge(m, src)
}
func (m *VoteRequest) XXX_Size() int {
	return xxx_messageInfo_VoteRequest.Size(m)
}
func (m *VoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VoteRequest proto.InternalMessageInfo

func (m *VoteRequest) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type VoteResponse struct {
	Granted              bool     `protobuf:"varint,1,opt,name=granted,proto3" json:"granted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteResponse) Reset()         { *m = VoteResponse{} }
func (m *VoteResponse) String() string { return proto.CompactTextString(m) }
func (*VoteResponse) ProtoMessage()    {}
func (*VoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{4}
}

func (m *VoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteResponse.Unmarshal(m, b)
}
func (m *VoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteResponse.Marshal(b, m, deterministic)
}
func (m *VoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteResponse.Merge(m, src)
}
func (m *VoteResponse) XXX_Size() int {
	return xxx_messageInfo_VoteResponse.Size(m)
}
func (m *VoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VoteResponse proto.InternalMessageInfo

func (m *VoteResponse) GetGranted() bool {
	if m != nil {
		return m.Granted
	}
	return false
}

type Message struct {
	Term      uint64 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Sender    uint64 `protobuf:"varint,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipient uint64 `protobuf:"varint,3,opt,name=recipient,proto3" json:"recipient,omitempty"`
	// Types that are valid to be assigned to Message:
	//	*Message_AppendRequest
	//	*Message_AppendResponse
	//	*Message_VoteRequest
	//	*Message_VoteResponse
	//	*Message_ProposeRequest
	Message              isMessage_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{5}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *Message) GetSender() uint64 {
	if m != nil {
		return m.Sender
	}
	return 0
}

func (m *Message) GetRecipient() uint64 {
	if m != nil {
		return m.Recipient
	}
	return 0
}

type isMessage_Message interface {
	isMessage_Message()
}

type Message_AppendRequest struct {
	AppendRequest *AppendRequest `protobuf:"bytes,4,opt,name=append_request,json=appendRequest,proto3,oneof"`
}

type Message_AppendResponse struct {
	AppendResponse *AppendResponse `protobuf:"bytes,5,opt,name=append_response,json=appendResponse,proto3,oneof"`
}

type Message_VoteRequest struct {
	VoteRequest *VoteRequest `protobuf:"bytes,6,opt,name=vote_request,json=voteRequest,proto3,oneof"`
}

type Message_VoteResponse struct {
	VoteResponse *VoteResponse `protobuf:"bytes,7,opt,name=vote_response,json=voteResponse,proto3,oneof"`
}

type Message_ProposeRequest struct {
	ProposeRequest *ProposeRequest `protobuf:"bytes,8,opt,name=propose_request,json=proposeRequest,proto3,oneof"`
}

func (*Message_AppendRequest) isMessage_Message() {}

func (*Message_AppendResponse) isMessage_Message() {}

func (*Message_VoteRequest) isMessage_Message() {}

func (*Message_VoteResponse) isMessage_Message() {}

func (*Message_ProposeRequest) isMessage_Message() {}

func (m *Message) GetMessage() isMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Message) GetAppendRequest() *AppendRequest {
	if x, ok := m.GetMessage().(*Message_AppendRequest); ok {
		return x.AppendRequest
	}
	return nil
}

func (m *Message) GetAppendResponse() *AppendResponse {
	if x, ok := m.GetMessage().(*Message_AppendResponse); ok {
		return x.AppendResponse
	}
	return nil
}

func (m *Message) GetVoteRequest() *VoteRequest {
	if x, ok := m.GetMessage().(*Message_VoteRequest); ok {
		return x.VoteRequest
	}
	return nil
}

func (m *Message) GetVoteResponse() *VoteResponse {
	if x, ok := m.GetMessage().(*Message_VoteResponse); ok {
		return x.VoteResponse
	}
	return nil
}

func (m *Message) GetProposeRequest() *ProposeRequest {
	if x, ok := m.GetMessage().(*Message_ProposeRequest); ok {
		return x.ProposeRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Message) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Message_AppendRequest)(nil),
		(*Message_AppendResponse)(nil),
		(*Message_VoteRequest)(nil),
		(*Message_VoteResponse)(nil),
		(*Message_ProposeRequest)(nil),
	}
}

// extensions
type ProposeRequest struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProposeRequest) Reset()         { *m = ProposeRequest{} }
func (m *ProposeRequest) String() string { return proto.CompactTextString(m) }
func (*ProposeRequest) ProtoMessage()    {}
func (*ProposeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{6}
}

func (m *ProposeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProposeRequest.Unmarshal(m, b)
}
func (m *ProposeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProposeRequest.Marshal(b, m, deterministic)
}
func (m *ProposeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposeRequest.Merge(m, src)
}
func (m *ProposeRequest) XXX_Size() int {
	return xxx_messageInfo_ProposeRequest.Size(m)
}
func (m *ProposeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProposeRequest proto.InternalMessageInfo

func (m *ProposeRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Entry)(nil), "raftpb.Entry")
	proto.RegisterType((*AppendRequest)(nil), "raftpb.AppendRequest")
	proto.RegisterType((*AppendResponse)(nil), "raftpb.AppendResponse")
	proto.RegisterType((*VoteRequest)(nil), "raftpb.VoteRequest")
	proto.RegisterType((*VoteResponse)(nil), "raftpb.VoteResponse")
	proto.RegisterType((*Message)(nil), "raftpb.Message")
	proto.RegisterType((*ProposeRequest)(nil), "raftpb.ProposeRequest")
}

func init() { proto.RegisterFile("raft.proto", fileDescriptor_b042552c306ae59b) }

var fileDescriptor_b042552c306ae59b = []byte{
	// 462 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0x5b, 0x8b, 0xd3, 0x40,
	0x14, 0x6e, 0xec, 0x25, 0xed, 0x49, 0x9b, 0xc2, 0xec, 0xba, 0x04, 0x2f, 0x50, 0xa2, 0x60, 0x9e,
	0x8a, 0xd4, 0x17, 0x41, 0x14, 0xab, 0x2c, 0x54, 0x50, 0x58, 0x46, 0xd1, 0xc7, 0x32, 0x9b, 0x9c,
	0x5d, 0xf3, 0x90, 0x99, 0x71, 0x66, 0x1a, 0xf4, 0x6f, 0xf8, 0xea, 0x9f, 0x95, 0xcc, 0xe4, 0xba,
	0xec, 0xdb, 0x9c, 0xef, 0x5c, 0xbe, 0xef, 0x7c, 0x27, 0x01, 0x50, 0xec, 0xc6, 0x6c, 0xa5, 0x12,
	0x46, 0x90, 0x59, 0xf5, 0x96, 0xd7, 0xf1, 0x25, 0x4c, 0x2f, 0xb9, 0x51, 0x7f, 0x08, 0x81, 0x89,
	0x41, 0x55, 0x44, 0xde, 0xc6, 0x4b, 0x26, 0xd4, 0xbe, 0xc9, 0x39, 0x4c, 0x73, 0x9e, 0xe1, 0xef,
	0xe8, 0x81, 0x05, 0x5d, 0x50, 0x55, 0x66, 0xcc, 0xb0, 0x68, 0xbc, 0xf1, 0x92, 0x25, 0xb5, 0xef,
	0xf8, 0xaf, 0x07, 0xab, 0xbd, 0x94, 0xc8, 0x33, 0x8a, 0xbf, 0x4e, 0xa8, 0x0d, 0x79, 0x0a, 0x20,
	0x15, 0x96, 0x47, 0x37, 0xc0, 0x4d, 0x5d, 0x54, 0xc8, 0x27, 0x3b, 0xe4, 0x31, 0xd8, 0xe0, 0x68,
	0x39, 0xdd, 0xf8, 0x79, 0x05, 0x7c, 0xab, 0x78, 0x5f, 0x80, 0x8f, 0xdc, 0xa8, 0x1c, 0x75, 0x34,
	0xde, 0x8c, 0x93, 0x60, 0xb7, 0xda, 0x3a, 0xb9, 0x5b, 0xab, 0x95, 0x36, 0x59, 0xf2, 0x04, 0x16,
	0xa9, 0x28, 0x8a, 0xdc, 0x18, 0xcc, 0xa2, 0x89, 0xe3, 0x68, 0x81, 0xf8, 0x3d, 0x84, 0x8d, 0x26,
	0x2d, 0x05, 0xd7, 0x48, 0x22, 0xf0, 0xf5, 0x29, 0x4d, 0x51, 0x6b, 0xab, 0x68, 0x4e, 0x9b, 0xf0,
	0xfe, 0x55, 0xe3, 0x67, 0x10, 0x7c, 0x17, 0x06, 0x9b, 0x9d, 0xda, 0x22, 0xaf, 0x5f, 0x94, 0xc0,
	0xd2, 0x15, 0x75, 0x24, 0xb7, 0x8a, 0xf1, 0x4a, 0x52, 0x4d, 0x52, 0x87, 0xf1, 0xbf, 0x31, 0xf8,
	0x5f, 0x50, 0x6b, 0x76, 0x8b, 0xf7, 0xfa, 0x7d, 0x01, 0x33, 0x8d, 0x3c, 0x43, 0x55, 0xab, 0xa8,
	0xa3, 0x6a, 0x4d, 0x85, 0x69, 0x2e, 0x73, 0xe4, 0xc6, 0xda, 0x3e, 0xa1, 0x1d, 0x40, 0xde, 0x41,
	0xc8, 0xec, 0x9a, 0x47, 0xe5, 0x74, 0x5a, 0x27, 0x82, 0xdd, 0xc3, 0xc6, 0xb4, 0xc1, 0x61, 0x0e,
	0x23, 0xba, 0x62, 0x83, 0x4b, 0xed, 0x61, 0xdd, 0xf6, 0xbb, 0x15, 0xa2, 0xa9, 0x1d, 0x70, 0x71,
	0x77, 0x80, 0xcb, 0x1e, 0x46, 0x34, 0x64, 0x43, 0x5f, 0x5f, 0xc3, 0xb2, 0x14, 0x06, 0x5b, 0x01,
	0x33, 0xdb, 0x7f, 0xd6, 0xf4, 0xf7, 0x3c, 0x3c, 0x8c, 0x68, 0x50, 0xf6, 0x2c, 0x7d, 0x03, 0xab,
	0xba, 0xb3, 0xa6, 0xf6, 0x6d, 0xeb, 0xf9, 0xb0, 0xb5, 0x25, 0x5e, 0x96, 0x7d, 0xa7, 0xf7, 0xb0,
	0x96, 0x4a, 0x48, 0xa1, 0x3b, 0xe6, 0xf9, 0x50, 0xf9, 0x95, 0x4b, 0x77, 0xe4, 0xa1, 0x1c, 0x20,
	0x1f, 0x16, 0xe0, 0x17, 0xee, 0x22, 0xf1, 0x73, 0x08, 0x87, 0xe5, 0xed, 0x97, 0xee, 0x75, 0x5f,
	0xfa, 0xee, 0x33, 0x04, 0x94, 0xdd, 0x98, 0xaf, 0xa8, 0xca, 0x3c, 0x45, 0xf2, 0x16, 0xce, 0x3e,
	0x8a, 0xa2, 0x38, 0xf1, 0x3c, 0x65, 0x06, 0x7f, 0xe4, 0xe6, 0xe7, 0x15, 0xa2, 0x22, 0xeb, 0x46,
	0x40, 0x7d, 0xee, 0x47, 0x77, 0x81, 0x78, 0x94, 0x78, 0x2f, 0xbd, 0xeb, 0x99, 0xfd, 0x1b, 0x5f,
	0xfd, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x6f, 0x66, 0x82, 0xd1, 0x9b, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RaftServiceClient is the client API for RaftService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RaftServiceClient interface {
	CommunicateWithPeer(ctx context.Context, opts ...grpc.CallOption) (RaftService_CommunicateWithPeerClient, error)
}

type raftServiceClient struct {
	cc *grpc.ClientConn
}

func NewRaftServiceClient(cc *grpc.ClientConn) RaftServiceClient {
	return &raftServiceClient{cc}
}

func (c *raftServiceClient) CommunicateWithPeer(ctx context.Context, opts ...grpc.CallOption) (RaftService_CommunicateWithPeerClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RaftService_serviceDesc.Streams[0], "/raftpb.RaftService/CommunicateWithPeer", opts...)
	if err != nil {
		return nil, err
	}
	x := &raftServiceCommunicateWithPeerClient{stream}
	return x, nil
}

type RaftService_CommunicateWithPeerClient interface {
	Send(*Message) error
	Recv() (*Message, error)
	grpc.ClientStream
}

type raftServiceCommunicateWithPeerClient struct {
	grpc.ClientStream
}

func (x *raftServiceCommunicateWithPeerClient) Send(m *Message) error {
	return x.ClientStream.SendMsg(m)
}

func (x *raftServiceCommunicateWithPeerClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RaftServiceServer is the server API for RaftService service.
type RaftServiceServer interface {
	CommunicateWithPeer(RaftService_CommunicateWithPeerServer) error
}

// UnimplementedRaftServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRaftServiceServer struct {
}

func (*UnimplementedRaftServiceServer) CommunicateWithPeer(srv RaftService_CommunicateWithPeerServer) error {
	return status.Errorf(codes.Unimplemented, "method CommunicateWithPeer not implemented")
}

func RegisterRaftServiceServer(s *grpc.Server, srv RaftServiceServer) {
	s.RegisterService(&_RaftService_serviceDesc, srv)
}

func _RaftService_CommunicateWithPeer_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RaftServiceServer).CommunicateWithPeer(&raftServiceCommunicateWithPeerServer{stream})
}

type RaftService_CommunicateWithPeerServer interface {
	Send(*Message) error
	Recv() (*Message, error)
	grpc.ServerStream
}

type raftServiceCommunicateWithPeerServer struct {
	grpc.ServerStream
}

func (x *raftServiceCommunicateWithPeerServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

func (x *raftServiceCommunicateWithPeerServer) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _RaftService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "raftpb.RaftService",
	HandlerType: (*RaftServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CommunicateWithPeer",
			Handler:       _RaftService_CommunicateWithPeer_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "raft.proto",
}
