syntax = "proto3";

package raftpb;

message Entry {
  uint64 term = 1;
  uint64 index = 2;
  bytes data = 3;
}

message AppendRequest {
  uint64 prev_index = 1;
  uint64 prev_term = 2;
  repeated Entry entries = 3;
  uint64 committed = 4;
}

message AppendResponse {
  bool success = 1;
  uint64 index = 2;
}

message VoteRequest {
  uint64 index = 1;
}

message VoteResponse {
  bool granted = 1;
}

message Message {
  uint64 term = 1;
  uint64 sender = 2;
  uint64 recipient = 3;
  oneof message {
    AppendRequest append_request = 4;
    AppendResponse append_response = 5;
    VoteRequest vote_request = 6;
    VoteResponse vote_response = 7;
    ProposeRequest propose_request = 8;
  }
}

service RaftService {
  rpc CommunicateWithPeer(stream Message) returns (stream Message) {}
}

// extensions
message ProposeRequest {
  bytes data = 1;
}