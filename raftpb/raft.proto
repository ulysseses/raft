syntax = "proto2";
package raftpb;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;

message Entry {
  optional uint64 index = 1  [(gogoproto.nullable) = false];
  optional uint64 term  = 2  [(gogoproto.nullable) = false];
  optional bytes  data  = 3  [(gogoproto.nullable) = false];
}

message Message {
  optional uint64      term = 1  [(gogoproto.nullable) = false];
  optional uint64      from = 2  [(gogoproto.nullable) = false];
  optional uint64      to   = 3  [(gogoproto.nullable) = false];
  oneof message {
    AppendRequest  append_request  = 4;
    AppendResponse append_response = 5;
    VoteRequest    vote_request    = 6;
    VoteResponse   vote_response   = 7;
    ProposeRequest propose_request = 8;
  }
}

message AppendRequest {
  optional uint64 prev_index = 1  [(gogoproto.nullable) = false];
  optional uint64 prev_term  = 2  [(gogoproto.nullable) = false];
  optional uint64 committed  = 3  [(gogoproto.nullable) = false];
  repeated Entry entries     = 4  [(gogoproto.nullable) = false];
}

message AppendResponse {
  optional bool success = 1  [(gogoproto.nullable) = false];
  optional uint64 index = 2  [(gogoproto.nullable) = false];
}

message VoteRequest {
  optional uint64 index = 1  [(gogoproto.nullable) = false];
}

message VoteResponse {
  optional bool granted = 1  [(gogoproto.nullable) = false];
}

// extensions
message ProposeRequest {
  optional bytes data = 1  [(gogoproto.nullable) = false];
}

service Raft {
  rpc Communicate(stream Message) returns (stream Message) {}
}
